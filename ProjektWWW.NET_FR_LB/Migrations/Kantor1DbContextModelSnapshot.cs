// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjektWWW.NET_FR_LB.Data;

#nullable disable

namespace ProjektWWW.NET_FR_LB.Migrations
{
    [DbContext(typeof(Kantor1DbContext))]
    partial class Kantor1DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjektWWW.NET_FR_LB.Models.Akcje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Akcja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Szczegoly")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UzytkownikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UzytkownikId");

                    b.ToTable("Akcje");
                });

            modelBuilder.Entity("ProjektWWW.NET_FR_LB.Models.AlertKursu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktywny")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PowiadomGdyMniejszy")
                        .HasColumnType("bit");

                    b.Property<double>("ProgKursu")
                        .HasColumnType("float");

                    b.Property<int>("UzytkownikId")
                        .HasColumnType("int");

                    b.Property<int>("WalutaDoId")
                        .HasColumnType("int");

                    b.Property<int>("WalutaZId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UzytkownikId");

                    b.HasIndex("WalutaDoId");

                    b.HasIndex("WalutaZId");

                    b.ToTable("AlertyKursow");
                });

            modelBuilder.Entity("ProjektWWW.NET_FR_LB.Models.HistoriaAktualizacji", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAktualizacji")
                        .HasColumnType("datetime2");

                    b.Property<int>("LiczbaPobranychKursow")
                        .HasColumnType("int");

                    b.Property<int>("ZrodloId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZrodloId");

                    b.ToTable("HistorieAktualizacji");
                });

            modelBuilder.Entity("ProjektWWW.NET_FR_LB.Models.HistoriaWymianUzytkownika", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataPrzeliczenia")
                        .HasColumnType("datetime2");

                    b.Property<double>("KwotaWejsciowa")
                        .HasColumnType("float");

                    b.Property<double>("KwotaWynikowa")
                        .HasColumnType("float");

                    b.Property<int>("UzytkownikId")
                        .HasColumnType("int");

                    b.Property<int>("WalutaDoId")
                        .HasColumnType("int");

                    b.Property<int>("WalutaZId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UzytkownikId");

                    b.HasIndex("WalutaDoId");

                    b.HasIndex("WalutaZId");

                    b.ToTable("HistoriaWymianUzytkownika");
                });

            modelBuilder.Entity("ProjektWWW.NET_FR_LB.Models.KursWaluty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<double>("Kurs")
                        .HasColumnType("float");

                    b.Property<int>("WalutaDoId")
                        .HasColumnType("int");

                    b.Property<int>("WalutaZId")
                        .HasColumnType("int");

                    b.Property<int>("ZrodloId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WalutaDoId");

                    b.HasIndex("WalutaZId");

                    b.HasIndex("ZrodloId");

                    b.ToTable("KursyWalut");
                });

            modelBuilder.Entity("ProjektWWW.NET_FR_LB.Models.UlubioneKursiki", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataDodania")
                        .HasColumnType("datetime2");

                    b.Property<int>("UzytkownikId")
                        .HasColumnType("int");

                    b.Property<int>("WalutaDoId")
                        .HasColumnType("int");

                    b.Property<int>("WalutaZId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UzytkownikId");

                    b.HasIndex("WalutaDoId");

                    b.HasIndex("WalutaZId");

                    b.ToTable("UlubioneKursiki");
                });

            modelBuilder.Entity("ProjektWWW.NET_FR_LB.Models.Uzytkownik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataRejestracji")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HasloHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Uzytkownicy");
                });

            modelBuilder.Entity("ProjektWWW.NET_FR_LB.Models.Waluta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kraj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Waluty");
                });

            modelBuilder.Entity("ProjektWWW.NET_FR_LB.Models.ZrodloKursu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ZrodlaKursow");
                });

            modelBuilder.Entity("ProjektWWW.NET_FR_LB.Models.Akcje", b =>
                {
                    b.HasOne("ProjektWWW.NET_FR_LB.Models.Uzytkownik", "Uzytkownik")
                        .WithMany()
                        .HasForeignKey("UzytkownikId");

                    b.Navigation("Uzytkownik");
                });

            modelBuilder.Entity("ProjektWWW.NET_FR_LB.Models.AlertKursu", b =>
                {
                    b.HasOne("ProjektWWW.NET_FR_LB.Models.Uzytkownik", "Uzytkownik")
                        .WithMany()
                        .HasForeignKey("UzytkownikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjektWWW.NET_FR_LB.Models.Waluta", "WalutaDo")
                        .WithMany()
                        .HasForeignKey("WalutaDoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjektWWW.NET_FR_LB.Models.Waluta", "WalutaZ")
                        .WithMany()
                        .HasForeignKey("WalutaZId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uzytkownik");

                    b.Navigation("WalutaDo");

                    b.Navigation("WalutaZ");
                });

            modelBuilder.Entity("ProjektWWW.NET_FR_LB.Models.HistoriaAktualizacji", b =>
                {
                    b.HasOne("ProjektWWW.NET_FR_LB.Models.ZrodloKursu", "Zrodlo")
                        .WithMany()
                        .HasForeignKey("ZrodloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zrodlo");
                });

            modelBuilder.Entity("ProjektWWW.NET_FR_LB.Models.HistoriaWymianUzytkownika", b =>
                {
                    b.HasOne("ProjektWWW.NET_FR_LB.Models.Uzytkownik", "Uzytkownik")
                        .WithMany()
                        .HasForeignKey("UzytkownikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjektWWW.NET_FR_LB.Models.Waluta", "WalutaDo")
                        .WithMany()
                        .HasForeignKey("WalutaDoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjektWWW.NET_FR_LB.Models.Waluta", "WalutaZ")
                        .WithMany()
                        .HasForeignKey("WalutaZId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uzytkownik");

                    b.Navigation("WalutaDo");

                    b.Navigation("WalutaZ");
                });

            modelBuilder.Entity("ProjektWWW.NET_FR_LB.Models.KursWaluty", b =>
                {
                    b.HasOne("ProjektWWW.NET_FR_LB.Models.Waluta", "WalutaDo")
                        .WithMany()
                        .HasForeignKey("WalutaDoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjektWWW.NET_FR_LB.Models.Waluta", "WalutaZ")
                        .WithMany()
                        .HasForeignKey("WalutaZId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjektWWW.NET_FR_LB.Models.ZrodloKursu", "Zrodlo")
                        .WithMany()
                        .HasForeignKey("ZrodloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WalutaDo");

                    b.Navigation("WalutaZ");

                    b.Navigation("Zrodlo");
                });

            modelBuilder.Entity("ProjektWWW.NET_FR_LB.Models.UlubioneKursiki", b =>
                {
                    b.HasOne("ProjektWWW.NET_FR_LB.Models.Uzytkownik", "Uzytkownik")
                        .WithMany()
                        .HasForeignKey("UzytkownikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjektWWW.NET_FR_LB.Models.Waluta", "WalutaDo")
                        .WithMany()
                        .HasForeignKey("WalutaDoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjektWWW.NET_FR_LB.Models.Waluta", "WalutaZ")
                        .WithMany()
                        .HasForeignKey("WalutaZId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uzytkownik");

                    b.Navigation("WalutaDo");

                    b.Navigation("WalutaZ");
                });
#pragma warning restore 612, 618
        }
    }
}
